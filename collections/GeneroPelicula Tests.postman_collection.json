{
	"info": {
		"_postman_id": "f371ca9a-5ad8-4292-b5c3-2b2cda7cda99",
		"name": "GeneroPelicula Tests",
		"description": "Colección de pruebas sobre el recurso ActorPelicula",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23040038"
	},
	"item": [
		{
			"name": "Crear Pelicula",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);\r",
							"postman.setGlobalVariable(\"new_id_p\",data.id);\r",
							"tests[\"No genera error en el Post\"] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"Matrix\",\r\n    \"poster\":\"https://pics.filmaffinity.com/Matrix-155050517-large.jpg\",\r\n    \"duracionSec\": 12393,\r\n    \"pais\":\"Estados Unidos\",\r\n    \"fechaEstreno\": \"1999-03-12\",\r\n    \"url\":\"https://www.youtube.com/watch?v=OM0tSTEQCQA\",\r\n    \"visitas\": 3,\r\n    \"estrellasPromedio\": 4.3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/peliculas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"peliculas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear pelicula 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_p2\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 201;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\":\"El discurso del rey\",\r\n    \"poster\":\"https://es.web.img3.acsta.net/medias/nmedia/18/82/26/21/19609697.jpg\",\r\n    \"duracionSec\": 34566,\r\n    \"pais\":\"Estados Unidos\",\r\n    \"fechaEstreno\": \"2011-02-11\",\r\n    \"url\":\"https://www.youtube.com/watch?v=KpssjoKZK1w\",\r\n    \"visitas\": 5,\r\n    \"estrellasPromedio\": 4.1\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/peliculas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"peliculas"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea una nueva pelicula. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_gen\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 201;",
							"console.log(data.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"nombre\": \"Suspenso\" \n    }"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo actor. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Agregar una pelicula a un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/{{new_id_gen}}/peliculas/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"{{new_id_gen}}",
						"peliculas",
						"{{new_id_p}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia una pelicula a un actor en la aplicación. \r\n\r\nSe envía el Id del pelicula y el del actor a asociar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Agregar una pelicula inexistente a un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No deberia asociar al genero ya que la pelicula no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"No se encuentra la pelicula con el id provisto.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/{{new_id_gen}}/peliculas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"{{new_id_gen}}",
						"peliculas",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia una pelicula que no existe a un actor en la aplicación. \r\n\r\nSe envía el Id del pelicula y el del actor a asociar en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /peliculas/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener una pelicula de un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"no genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/{{new_id_gen}}/peliculas/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"{{new_id_gen}}",
						"peliculas",
						"{{new_id_p}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta una pelicula de un actor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del pelicula y del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener una pelicula inexistente de un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No deberia obtener la pelicula ya que el genro no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"No se encuentra la pelicula con el id provisto.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/{{new_id_gen}}/peliculas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"{{new_id_gen}}",
						"peliculas",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta una pelicula que no existe de un actor en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Asociar peliculas a un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"no genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"nombre\":\"Matrix\",\n        \"poster\":\"https://pics.filmaffinity.com/Matrix-155050517-large.jpg\",\n        \"duracionSec\": 12393,\n        \"pais\":\"Estados Unidos\",\n        \"fechaEstreno\": \"1999-03-12\",\n        \"url\":\"https://www.youtube.com/watch?v=OM0tSTEQCQA\",\n        \"visitas\": 3,\n        \"estrellasPromedio\": 4.3,\n        \"id\":{{new_id_p}}\n    },\n    {\n        \"nombre\":\"El discurso del rey\",\n        \"poster\":\"https://es.web.img3.acsta.net/medias/nmedia/18/82/26/21/19609697.jpg\",\n        \"duracionSec\": 34566,\n        \"pais\":\"Estados Unidos\",\n        \"fechaEstreno\": \"2011-02-11\",\n        \"url\":\"https://www.youtube.com/watch?v=KpssjoKZK1w\",\n        \"visitas\": 5,\n        \"estrellasPromedio\": 4.1,\n        \"id\":{{new_id_p2}}\n    }\n]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/{{new_id_gen}}/peliculas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"{{new_id_gen}}",
						"peliculas"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza la lista de peliculas a un actor existente.\r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Asociar peliculas a un genero inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No se deberian asociar las peliculas ya que el genero no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"No se encuentra el genero con el id provisto.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"nombre\":\"Matrix\",\n        \"poster\":\"https://pics.filmaffinity.com/Matrix-155050517-large.jpg\",\n        \"duracionSec\": 12393,\n        \"pais\":\"Estados Unidos\",\n        \"fechaEstreno\": \"1999-03-12\",\n        \"url\":\"https://www.youtube.com/watch?v=OM0tSTEQCQA\",\n        \"visitas\": 3,\n        \"estrellasPromedio\": 4.3,\n        \"id\":{{new_id_p}}\n    },\n    {\n        \"nombre\":\"El discurso del rey\",\n        \"poster\":\"https://es.web.img3.acsta.net/medias/nmedia/18/82/26/21/19609697.jpg\",\n        \"duracionSec\": 34566,\n        \"pais\":\"Estados Unidos\",\n        \"fechaEstreno\": \"2011-02-11\",\n        \"url\":\"https://www.youtube.com/watch?v=KpssjoKZK1w\",\n        \"visitas\": 5,\n        \"estrellasPromedio\": 4.1,\n        \"id\":{{new_id_p2}}\n    }\n]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/0/peliculas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"0",
						"peliculas"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza la lista de peliculas de un actor que no existe. \r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /actores/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener las peliculas de un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"no genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"contador de generos\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/{{new_id_gen}}/peliculas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"{{new_id_gen}}",
						"peliculas"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta los peliculas de un actor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del libro y el del pelicula a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Borrar una pelicula a un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/{{new_id_gen}}/peliculas/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"{{new_id_gen}}",
						"peliculas",
						"{{new_id_p}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociación entre un actor y una pelicula. Se envían los ids del pelicula y del libro creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar una pelicula 2 a un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/{{new_id_gen}}/peliculas/{{new_id_p2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"{{new_id_gen}}",
						"peliculas",
						"{{new_id_p2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociación entre un actor y una pelicula. Se envían los ids del pelicula y del libro creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borra una pelicula a un genero inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No so deberia eliminar el pelicula ya que el geneo no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"No se encuentra el genero con el id provisto.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/0/peliculas/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"0",
						"peliculas",
						"{{new_id_p}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra la asociación entre un actor que no existe y una pelicula en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar una pelicula inexistente a un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"No so deberia eliminar el pelicula ya que esta no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"No se encuentra la pelicula con el id provisto.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/{{new_id_gen}}/peliculas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"{{new_id_gen}}",
						"peliculas",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra la asociación entre a un actor y una pelicula que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /actores/0/peliculas no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un genero a una pelicula",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/peliculas/{{new_id_p}}/generos/{{new_id_gen}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"peliculas",
						"{{new_id_p}}",
						"generos",
						"{{new_id_gen}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociación entre un libro y un autor. Se envían los ids del autor y del libro creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar una pelicula",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/peliculas/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"peliculas",
						"{{new_id_p}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una pelicula. Se envía el id del pelicula creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar una pelicula 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/peliculas/{{new_id_p2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"peliculas",
						"{{new_id_p2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una pelicula. Se envía el id del pelicula creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un genero",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/api/generos/{{new_id_gen}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"api",
						"generos",
						"{{new_id_gen}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un actor. Se envía el id del libro creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}